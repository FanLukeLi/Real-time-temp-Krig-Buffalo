version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./data/zookeeper:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka:/bitnami/kafka

  spark:
    image: bitnami/spark:latest
    depends_on:
      - kafka
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - spark-data:/opt/spark/work-dir

  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    environment:
      - CLUSTER_NAME=test
    volumes:
      - hadoop-namenode:/hadoop/dfs/name
    ports:
      - "9870:9870"

  hadoop-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    depends_on:
      - hadoop-namenode
    environment:
      - CLUSTER_NAME=test
    volumes:
      - hadoop-datanode:/hadoop/dfs/data
    ports:
      - "9864:9864"

  miniconda:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./:/home/rt_temp_krig_bflo_app
    working_dir: /home/rt_temp_krig_bflo_app
    command: ["tail", "-f", "/dev/null"]
    environment:
      - export PYTHONPATH=/opt/bitnami/spark/python

volumes:
  kafka-data:
  spark-data:
  hadoop-namenode:
  hadoop-datanode:
